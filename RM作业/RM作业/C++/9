#include <bits/stdc++.h>
using namespace std;

vector<int> seq[10005];

void uniq(vector<int>& v){
    unordered_set<int> s; s.reserve(v.size()*2+1);
    vector<int> r; r.reserve(v.size());
    for(int x: v) if(s.insert(x).second) r.push_back(x);
    v.swap(r);
}

int main() {
    ios::sync_with_stdio(false); cin.tie(nullptr);
    int n; if(!(cin>>n)) return 0;
    while(n--){
        string op; cin>>op;
        if(op=="new"){ int id; cin>>id; seq[id].clear(); }
        else if(op=="add"){ int id,num; cin>>id>>num; seq[id].push_back(num); }
        else if(op=="merge"){
            int a,b; cin>>a>>b; if(a!=b){ seq[a].insert(seq[a].end(), seq[b].begin(), seq[b].end()); seq[b].clear(); }
        }
        else if(op=="unique"){ int id; cin>>id; uniq(seq[id]); }
        else{ // out
            int id; cin>>id; auto v=seq[id]; sort(v.begin(),v.end());
            for(size_t i=0;i<v.size();++i){ if(i) cout<<' '; cout<<v[i]; } cout<<"\n";
        }
    }
    return 0;
}
